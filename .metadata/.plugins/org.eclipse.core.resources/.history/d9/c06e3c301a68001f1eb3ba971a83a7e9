package com.eco.system.entity;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Entity class representing a CartItem in the system.
 * Maps to the 'cart_items' table in the database.
 */
@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "cart_items")
public class CartItem {

    /**
     * Primary key of the CartItem entity.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer cartItemId;

    /**
     * The product associated with this cart item.
     * Must not be null.
     */
    @NotNull(message = "Product is mandatory")
    @ManyToOne
    @JoinColumn(name = "product_id")
    private Product product;

    /**
     * The customer who owns this cart item.
     * Must not be null.
     */
    @NotNull(message = "Customer is mandatory")
    @ManyToOne
    @JoinColumn(name = "customer_id")
    private Customer customer;

    /**
     * Constructor for creating a CartItem with specific values.
     * 
     * @param cartItemId the unique identifier for the cart item
     * @param customer the customer who owns this cart item
     * @param product the product associated with this cart item
     */
    public CartItem(Integer cartItemId, @NotNull(message = "Customer is mandatory") Customer customer,
                    @NotNull(message = "Product is mandatory") Product product) {
        super();
        this.cartItemId = cartItemId;
        this.product = product;
        this.customer = customer;
    }

	public CartItem(Integer cartItemId, @NotNull(message = "Product is mandatory") Product product) {
		super();
		this.cartItemId = cartItemId;
		this.product = product;
	}

	
}
